{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/items-status-filter/items-status-filter.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onInputChange","e","props","onFilter","target","value","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","changeStatus","onStatusChange","textContent","toLowerCase","buttonData","name","filter","buttons","clazz","ItemAddForm","state","onLabelChange","setState","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","term","deleteItem","idx","findIndex","el","slice","text","newItem","toggleProperty","status","search","items","indexOf","arr","propName","oldItem","visibleItems","doneCount","length","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.95b5c3e8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './app-header.css';\n\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n      <div className=\"app-header d-flex\">\n        <h1>Todo List</h1>\n        <p className='font-weight-normal grey ml-auto mt-auto'>{toDo} more to do, {done} done</p>\n      </div>\n    );\n  };\n  \n  export default AppHeader;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n\n    onInputChange = (e) => {\n       \n      this.props.onFilter(e.target.value)\n      \n    }\n    \n    render () {\n    const searchText = 'Type here to search'\n\n    return (\n         <input \n    placeholder={searchText} className='p-2'\n    onChange={this.onInputChange}/>\n    );\n    }\n}\n\n\n\n\n    ","import React from 'react';\n\nimport './todo-list-item.css'\n\nconst TodoListItem = (props) => {\n\n const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            done, important } = props;\n\n    let classNames = 'todo-list-item'\n\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n  \n    return (\n      <span className={ classNames }>\n        <span\n          className=\"todo-list-item-label\"\n          onClick = { onToggleDone }>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right width-b ml-1\"\n                onClick = { onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right width-b\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n\nexport default TodoListItem;\n  \n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleted,\n                   onToggleImportant,\n                   onToggleDone}) => {\n\n    const elements = todos.map( item => {\n        const {id, ...itemProps} = item;\n        return (\n        <li key = {id} className = \"list-group-item p-2\">\n            <TodoListItem {...itemProps}\n            onDeleted={() => onDeleted(id)}\n            onToggleImportant={() => onToggleImportant(id)}\n            onToggleDone={() => onToggleDone(id)}\n            />\n        </li>\n            );\n    })\n\n    return (\n        <ul className = \"list-group todo-list mt-2\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import React, {Component} from 'react';\n\nimport './items-status-filter.css';\n\n\nexport default class ItemStatusFilter extends Component {\n\n        changeStatus = (e) => {\n                this.props.onStatusChange(e.target.textContent.toLowerCase());\n        }\n\n        buttonData = [\n                {name: 'all', label: 'All'},\n                {name: 'active', label: 'Active'},\n                {name: 'done', label: 'Done'}\n        ]\n\n        render () {\n          \n                const { filter } = this.props\n\n          const buttons = this.buttonData.map(({name, label}) => {\n                const isActive = filter === name;\n                const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n               return <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name}\n                onClick={this.changeStatus}>{label}</button>\n          })\n          return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        ); \n        }\n};\n  ","import React, { Component } from 'react';\nimport './item-add-form.css';\n\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n       this.props.addItem(this.state.label);\n       this.setState({\n           label: ''\n       })\n    }\n    \n    render () {\n\n        return (\n            <form className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}>\n                <input type=\"text\"\n                className=\"form-control my-input\"\n                onChange={this.onLabelChange}\n                placeholder=\"What needs to be done?\" \n                value={this.state.label}/>\n                <button \n                className=\"btn btn-outline-secondary my-btn\">\n                Add Item</button>\n            </form>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport ItemStatusFilter from '../items-status-filter/items-status-filter';\nimport ItemAddForm from '../item-add-form/item-add-form';\n\nimport './app.css'\n\n// All elements' names start with capitals this is required in React\n// That's how React differs custom tags from standard html tags\n//JSX only create one element so always wrap multiple elements with a parent element\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n      todoData: [\n        this.createTodoItem('Drink Coffee'),\n        this.createTodoItem('Make Awesome App'),\n        this.createTodoItem('Have a lunch')\n      ],\n      term: '',\n      filter: 'all'\n    }\n\n    createTodoItem(label) {\n      return {\n        label, \n        important: false, \n        done: false,\n        id: this.maxId++\n      }\n    }\n\n    deleteItem = (id) => {\n       this.setState(({todoData}) => {\n         const idx = todoData.findIndex(el => el.id === id);\n         \n         const newArray = [...todoData.slice(0, idx), \n               ...todoData.slice(idx+1)];\n\n         return {\n           todoData: newArray\n         };\n       });\n    }\n\n    addItem = (text) => {\n      this.setState(({todoData}) => {\n        const newItem = this.createTodoItem(text);\n        const newArray = [\n          ...todoData, \n          newItem  \n        ];\n        \n\n        return {\n          todoData: newArray\n        }\n      })\n    }\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex(el => el.id === id);\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n\n        return [\n          ...arr.slice(0, idx), \n          newItem,\n          ...arr.slice(idx+1)\n        ];\n\n    }\n\n    onToggleDone = (id) => {\n      this.setState(({ todoData }) => {\n      \n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      }\n\n      });\n    }\n\n    onToggleImportant = (id) => {\n\n      this.setState(({ todoData }) => {\n      \n      return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n      }\n  \n        });\n    }\n\n    onFilter = (text) => {\n      this.setState(() => {\n        return {\n          term: text\n        }\n      })\n    }\n\n    onStatusChange = (status) =>{\n      this.setState({\n        filter: status\n      })\n    }\n\n    search = (items, term) => {\n       if (term === '') {\n         return items;\n       }\n       return items.filter(item => {\n         return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n       })\n    }\n\n    filter = (items, filter) => {\n      switch (filter) {\n        case 'all':\n          return items;\n        case 'active':\n          return items.filter(item => !item.done);\n        case 'done':\n          return items.filter(item => item.done);\n        default:\n          return items;\n      }\n    }\n\n\n    render () {\n      const { todoData, term, filter } = this.state;\n      const visibleItems = this.filter(this.search(todoData, term), filter);\n\n      const doneCount = todoData\n                     .filter(el => el.done)\n                     .length;\n\n      const todoCount = todoData.length - doneCount;\n\n      return (\n        <div className=\"todo-app mx-auto container width\">\n          <AppHeader toDo={todoCount} done={doneCount} />\n          <div className=\"top-panel d-flex\">\n            <SearchPanel \n              onFilter={this.onFilter}/>\n            <ItemStatusFilter \n            onStatusChange={this.onStatusChange}\n            filter={filter}/>\n          </div>\n    \n          <TodoList todos={visibleItems} \n          onDeleted = {this.deleteItem}\n          onToggleImportant = {this.onToggleImportant}\n          onToggleDone = {this.onToggleDone} />\n\n          <ItemAddForm\n          addItem = { this.addItem } />\n        </div>\n      );\n    }\n  \n  \n  };\n\n ","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/app/app'\n\nReactDom.render(<App />, document.getElementById('root')); //this function has to take element not component"],"sourceRoot":""}